<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link rel="stylesheet" href="bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="public/style.css">
</head>
<body>
    <div class="container mt-5">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item active" aria-current="page">Home</li>
            </ol>
        </nav>

        <div class="row">
            <div class="col">
                <h2>Available Devices:</h2>
            </div>
        </div>

        <div class="row">
            <div class="col devices">
                <div class="list-group" id="device-list">
                    <!-- Agrega más dispositivos aquí según sea necesario -->
                </div>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col">
                <div class="d-grid gap-2">
                    <button class="btn btn-primary" type="button" id="send-btn" onclick="window.location.href = '/receive'">RECEIVE FILES</button>
                </div>
            </div>
        </div>

    </div>
</body>

<script src="bootstrap/js/bootstrap.min.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    const deviceList = document.querySelector("#device-list");
    const message = document.createElement("h3");
    message.id = "message";
    message.textContent = "There's no devices to send files.";

    socket.on("new-device", (name, id, ip) => {
        // Crear un nuevo elemento de lista para el dispositivo
        const deviceItem = document.createElement("a");
        deviceItem.className = "list-group-item list-group-item-action";
        deviceItem.setAttribute("data-device-id", id);
        deviceItem.innerHTML = `
            <h3 class="mb-0">${name}</h3>
            <p class="mb-0">IP ADDRESS: ${ip}</p>
        `;

        // Agregar el nuevo dispositivo a la lista
        deviceList.appendChild(deviceItem);

        // Ocultar el mensaje si existe
        if (message.style.display !== "none") {
            message.style.display = "none";
        }
    });

    socket.on("device-disconnected", (disconnectedDeviceId) => {
        // Buscar el dispositivo en la lista por su ID y eliminarlo
        const disconnectedDevice = document.querySelector(`[data-device-id="${disconnectedDeviceId}"]`);
        if (disconnectedDevice) {
            disconnectedDevice.remove();
        }

        // Si no quedan dispositivos, mostrar el mensaje
        if (document.querySelectorAll(`[data-device-id]`).length == 0) {
            message.style.display = "block";
            deviceList.appendChild(message);
        }
    });

    // Verificar si no hay dispositivos al cargar la página
    if (deviceList.children.length === 0) {
        message.style.display = "block";
        deviceList.appendChild(message);
    }
</script>


</html>
